"use strict";(self.webpackChunkdl_docs=self.webpackChunkdl_docs||[]).push([[997],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(a),m=l,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||r;return a?n.createElement(k,i(i({ref:t},d),{},{components:a})):n.createElement(k,i({ref:t},d))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5862:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_position:3},i="Available commands",o={unversionedId:"commands",id:"commands",title:"Available commands",description:"dl",source:"@site/docs/commands.md",sourceDirName:".",slug:"/commands",permalink:"/commands",draft:!1,editUrl:"https://github.com/local-deploy/docs/edit/master/docs/commands.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/getting-started/env"},next:{title:"Troubleshooting",permalink:"/troubleshooting"}},p={},s=[{value:"dl",id:"dl",level:2},{value:"completion",id:"completion",level:2},{value:"config",id:"config",level:2},{value:"config repo",id:"config-repo",level:2},{value:"env",id:"env",level:2},{value:"deploy",id:"deploy",level:2},{value:"up",id:"up",level:2},{value:"down",id:"down",level:2},{value:"recreate",id:"recreate",level:2},{value:"bash",id:"bash",level:2},{value:"exec",id:"exec",level:2},{value:"service",id:"service",level:2},{value:"service up",id:"service-up",level:3},{value:"service down",id:"service-down",level:3},{value:"service recreate",id:"service-recreate",level:3},{value:"service restart",id:"service-restart",level:3},{value:"self-update",id:"self-update",level:2},{value:"ps",id:"ps",level:2},{value:"version",id:"version",level:2}],d={toc:s};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"available-commands"},"Available commands"),(0,l.kt)("h2",{id:"dl"},"dl"),(0,l.kt)("p",null,"Displays a short description and a list of available commands."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl\n")),(0,l.kt)("h2",{id:"completion"},"completion"),(0,l.kt)("p",null,"Displays instructions for enabling auto-completion in the console."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl completion [bash|zsh]\n")),(0,l.kt)("h2",{id:"config"},"config"),(0,l.kt)("p",null,"Application settings."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl config\n")),(0,l.kt)("h2",{id:"config-repo"},"config repo"),(0,l.kt)("p",null,"Menu for setting up the images source repository."),(0,l.kt)("p",null,"The default is the GitHub repository (ghcr.io). If you have problems downloading images, you can switch the source to the RedHat mirror (quay.io)"),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl config repo\n")),(0,l.kt)("h2",{id:"env"},"env"),(0,l.kt)("p",null,"Create or replace the ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," file. If a ",(0,l.kt)("inlineCode",{parentName:"p"},".env.example")," file exists in the root of the project, it will be used instead of the default file."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl env\n")),(0,l.kt)("h2",{id:"deploy"},"deploy"),(0,l.kt)("p",null,"Downloading files and databases from the server.",(0,l.kt)("br",{parentName:"p"}),"\n","Without specifying the flag, files and the database are downloaded by default.",(0,l.kt)("br",{parentName:"p"}),"\n","If you specify a flag, for example ",(0,l.kt)("inlineCode",{parentName:"p"},"-d"),", only the database will be downloaded."),(0,l.kt)("p",null,"Directories that are loaded by default:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Bitrix CMS: ",(0,l.kt)("inlineCode",{parentName:"li"},"bitrix")),(0,l.kt)("li",{parentName:"ul"},"WordPress: ",(0,l.kt)("inlineCode",{parentName:"li"},"wp-admin")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"wp-includes")),(0,l.kt)("li",{parentName:"ul"},"Laravel: only the database is loaded")),(0,l.kt)("p",null,"Available options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-d, --database")," dump only the database from the server"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-f, --files")," only download files from server"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-o, --override")," override boot directories (comma separated values)")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl deploy\ndl deploy -d\ndl deploy -f -o bitrix, upload\n")),(0,l.kt)("h2",{id:"up"},"up"),(0,l.kt)("p",null,"Run the project and place the files of the current directory in the container. When finished, displays the local links to the project.",(0,l.kt)("br",{parentName:"p"}),"\n","Analogue of the command ",(0,l.kt)("inlineCode",{parentName:"p"},"docker-compose up -d"),"."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl up\n")),(0,l.kt)("h2",{id:"down"},"down"),(0,l.kt)("p",null,"Stop and delete running project containers and the network.",(0,l.kt)("br",{parentName:"p"}),"\n","Analogue of the command ",(0,l.kt)("inlineCode",{parentName:"p"},"docker-compose down"),"."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl down\n")),(0,l.kt)("h2",{id:"recreate"},"recreate"),(0,l.kt)("p",null,"Stop project containers and restart.",(0,l.kt)("br",{parentName:"p"}),"\n","An alias for sequential execution of ",(0,l.kt)("inlineCode",{parentName:"p"},"dl down && dl up")," commands."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl recreate\n")),(0,l.kt)("h2",{id:"bash"},"bash"),(0,l.kt)("p",null,"Login to PHP container as www-data or root and start bash shell."),(0,l.kt)("p",null,"As the second parameter, you can specify the name or ID of another docker container.\nDefault is always the PHP container."),(0,l.kt)("p",null,"Available options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-r, --root")," enter the container as root")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl bash\ndl bash -r\ndl bash site.com_db\ndl bash fcb13f1a3ea7\n")),(0,l.kt)("h2",{id:"exec"},"exec"),(0,l.kt)("p",null,"Running bash command in PHP container as user www-data"),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'dl exec composer install\ndl exec "ls -la"\n')),(0,l.kt)("h2",{id:"service"},"service"),(0,l.kt)("p",null,"Management of service containers (portainer, mailcatcher, traefik)."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl service\n")),(0,l.kt)("h3",{id:"service-up"},"service up"),(0,l.kt)("p",null,"Launches the portainer, mailcatcher and traefik containers.",(0,l.kt)("br",{parentName:"p"}),"\n","Valid parameters for the --service flag: ",(0,l.kt)("inlineCode",{parentName:"p"},"portainer"),",",(0,l.kt)("inlineCode",{parentName:"p"}," mail"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"traefik")),(0,l.kt)("p",null,"Available options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-r, --restart")," restart running containers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-s, --service")," start one container")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl service up\ndl service up -r\ndl service up -s portainer\n")),(0,l.kt)("h3",{id:"service-down"},"service down"),(0,l.kt)("p",null,"Stops and removes the portainer, mailcatcher and traefik containers.",(0,l.kt)("br",{parentName:"p"}),"\n","Valid parameters for the --service flag: ",(0,l.kt)("inlineCode",{parentName:"p"},"portainer"),",",(0,l.kt)("inlineCode",{parentName:"p"}," mail"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"traefik")),(0,l.kt)("p",null,"Available options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-r, --restart")," restart running containers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-s, --service")," start one container")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl service down\ndl service down -r\ndl service down -s portainer\n")),(0,l.kt)("h3",{id:"service-recreate"},"service recreate"),(0,l.kt)("p",null,"Stops, removes and restarts the portainer, mailcatcher and traefik containers.",(0,l.kt)("br",{parentName:"p"}),"\n","Valid parameters for the --service flag: ",(0,l.kt)("inlineCode",{parentName:"p"},"portainer"),",",(0,l.kt)("inlineCode",{parentName:"p"}," mail"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"traefik")),(0,l.kt)("p",null,"Available options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-s, --service")," restart one container")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl service recreate\ndl service recreate -s portainer\n")),(0,l.kt)("h3",{id:"service-restart"},"service restart"),(0,l.kt)("p",null,"Restarts all service containers without deleting.",(0,l.kt)("br",{parentName:"p"}),"\n","Command alias ",(0,l.kt)("inlineCode",{parentName:"p"},"dl service --restart")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl service restart\n")),(0,l.kt)("h2",{id:"self-update"},"self-update"),(0,l.kt)("p",null,"Downloading the latest stable dl release from the repository and updating the application version."),(0,l.kt)("p",null,"Available options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-n, --no-overwrite")," do not overwrite config files")),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl self-update\ndl self-update -n\n")),(0,l.kt)("h2",{id:"ps"},"ps"),(0,l.kt)("p",null,"List of project containers."),(0,l.kt)("p",null,"The command is similar to ",(0,l.kt)("inlineCode",{parentName:"p"},"docker ps"),", but only the containers started by the current project are displayed."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl ps\n")),(0,l.kt)("p",null,"Output example:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"ID"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"State"),(0,l.kt)("th",{parentName:"tr",align:null},"IP"),(0,l.kt)("th",{parentName:"tr",align:null},"Ports"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"aa2b362ea773"),(0,l.kt)("td",{parentName:"tr",align:null},"site.com_php"),(0,l.kt)("td",{parentName:"tr",align:null},"running"),(0,l.kt)("td",{parentName:"tr",align:null},"172.25.0.3"),(0,l.kt)("td",{parentName:"tr",align:null},"80/tcp")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bbe79a746fe0"),(0,l.kt)("td",{parentName:"tr",align:null},"site.com_db"),(0,l.kt)("td",{parentName:"tr",align:null},"running"),(0,l.kt)("td",{parentName:"tr",align:null},"172.25.0.2"),(0,l.kt)("td",{parentName:"tr",align:null},"3306/tcp")))),(0,l.kt)("h2",{id:"version"},"version"),(0,l.kt)("p",null,"Display the current version."),(0,l.kt)("p",null,"Usage example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dl version\n")))}c.isMDXComponent=!0}}]);