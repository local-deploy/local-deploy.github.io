{"searchDocs":[{"title":"Доступные команды","type":0,"sectionRef":"#","url":"/ru/commands","content":"","keywords":"","version":"Следующая"},{"title":"dl​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#dl","content":"Выводит краткое описание и список доступных команд. Пример использования: dl  ","version":"Следующая","tagName":"h2"},{"title":"completion​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#completion","content":"Выводит инструкцию по включению автодополнения в консоли. Пример использования: dl completion dl completion [bash|zsh]  ","version":"Следующая","tagName":"h2"},{"title":"config​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#config","content":"Настройки приложения. Пример использования: dl config  ","version":"Следующая","tagName":"h2"},{"title":"config repo​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#config-repo","content":"Меню настройки репозитория исходных образов. По умолчанию используется репозиторий GitHub (ghcr.io). При возникновении проблем со скачиванием образов, вы можете переключить источник на зеркало RedHat (quay.io) Пример использования: dl config repo  ","version":"Следующая","tagName":"h2"},{"title":"cert​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#cert","content":"Создание и удаление корневого самоподписанного сертификата в браузерах Firefox и/или Chrome/Chromium. Команду нужно запустить только один раз. Она сгенерирует CA сертификат и с помощью утилиты certutil пропишет его в хранилище браузера. Созданный командой сертификат rootCA.pem (и ключ rootCA-key.pem) будут расположены в директории: ~/.config/dl/certs. После установки корневого сертификата перед запуском проекта (dl up) будет создан SSL сертификат, проект станет доступен в браузере по https протоколу. примечание Эта команда использует утилиту certutil, которая должна быть установлена на компьютере. Установка для некоторых OS: Debian/Ubuntu/Mint: sudo apt install libnss3-toolsArch Linux/Manjaro: pacman -S nssFedora: dnf install nss-toolsmacOS: brew install nss В deb-пакетах certutil указан как зависимость. примечание В некоторых операционных системах certutil может запросить пароль root для установки сертификата в хранилище браузера. Пример использования: dl cert install dl cert uninstall  ","version":"Следующая","tagName":"h2"},{"title":"env​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#env","content":"Создать или заменить файл .env. Если в корневом каталоге проекта существует файл .env.example, он будет использован вместо файла по умолчанию. Пример использования: dl env  ","version":"Следующая","tagName":"h2"},{"title":"deploy​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#deploy","content":"Скачивание файлов и базы данных с сервера. Без указания флага файлы и база данных загружаются по умолчанию. Если вы укажете флаг, например -d, будет загружена только база данных. Каталоги, которые загружаются по умолчанию: Битрикс CMS: bitrixWordPress: wp-admin и wp-includesLaravel: загружается только база данных Доступные опции: -d, --database дамп только базы данных с сервера-f, --files загружать только файлы с сервера-o, --override переопределить загружаемые директории (значения, разделенные запятыми)-t, --tables дамп только указанных таблиц (значения, разделенные запятыми) Пример использования: dl deploy dl deploy -d dl deploy -d -t b_user,b_file dl deploy -f dl deploy -f -o bitrix,upload  ","version":"Следующая","tagName":"h2"},{"title":"up​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#up","content":"Запустить проект и поместить файлы текущей директории в контейнер. По завершении отображает локальные ссылки на проект. Аналог команды docker-compose up -d. Пример использования: dl up  ","version":"Следующая","tagName":"h2"},{"title":"down​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#down","content":"Остановить и удалить запущенные контейнеры проекта и сеть. Аналог команды docker-compose down. Пример использования: dl down  ","version":"Следующая","tagName":"h2"},{"title":"recreate​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#recreate","content":"Остановить контейнеры проекта и запустить заново. Псевдоним последовательного выполнения команд dl down &amp;&amp; dl up. Пример использования: dl recreate  ","version":"Следующая","tagName":"h2"},{"title":"bash​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#bash","content":"Войти в контейнер PHP под пользователем www-data или root и запустить оболочку bash. В качестве второго параметра вы можете указать имя или ID другого контейнера docker. По умолчанию всегда используется контейнер PHP. Доступные опции: -r, --root войти в контейнер под пользователем root Пример использования: dl bash dl bash -r dl bash site.com_db dl bash fcb13f1a3ea7  ","version":"Следующая","tagName":"h2"},{"title":"exec​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#exec","content":"Запуск команды bash в контейнере PHP от имени пользователя www-data Пример использования: dl exec composer install dl exec &quot;ls -la&quot;  ","version":"Следующая","tagName":"h2"},{"title":"service​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#service","content":"Управление служебными контейнерами (portainer, mailcatcher, traefik). Пример использования: dl service  ","version":"Следующая","tagName":"h2"},{"title":"service up​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#service-up","content":"Запускает контейнеры portainer, mailcatcher и traefik. Допустимые параметры для флага --service: portainer, mail, traefik Доступные опции: -r, --restart перезапустить запущенные контейнеры-s, --service запустить один контейнер Пример использования: dl service up dl service up -r dl service up -s portainer  ","version":"Следующая","tagName":"h3"},{"title":"service down​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#service-down","content":"Останавливает и удаляет контейнеры portainer, mailcatcher и traefik. Допустимые параметры для флага --service: portainer, mail, traefik Доступные опции: -r, --restart перезапустить запущенные контейнеры-s, --service запустить один контейнер Пример использования: dl service down dl service down -r dl service down -s portainer  ","version":"Следующая","tagName":"h3"},{"title":"service recreate​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#service-recreate","content":"Останавливает, удаляет и запускает заново контейнеры portainer, mailcatcher и traefik. Допустимые параметры для флага --service: portainer, mail, traefik Доступные опции: -s, --service перезапустить один контейнер Пример использования: dl service recreate dl service recreate -s portainer  ","version":"Следующая","tagName":"h3"},{"title":"service restart​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#service-restart","content":"Перезапускает все сервисные контейнеры без удаления. Псевдоним команды dl service --restart Пример использования: dl service restart  ","version":"Следующая","tagName":"h3"},{"title":"self-update​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#self-update","content":"Скачивание с репозитория последнего стабильного релиза dl и обновление версии приложения. Команда доступна только при установке в домашнюю директорию пользователя. При установке deb-пакета dl обновляется через apt: sudo apt update &amp;&amp; sudo apt install dl Доступные опции: -n, --no-overwrite не перезаписывать файлы конфигурации Пример использования: dl self-update dl self-update -n  ","version":"Следующая","tagName":"h2"},{"title":"ps​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#ps","content":"Список контейнеров проекта. Команда схожа с docker ps, но отображаются только контейнеры, запущенные текущим проектом. Пример использования: dl ps  Пример вывода: ID\tName\tState\tIP\tPortsaa2b362ea773\tsite.com_php\trunning\t172.25.0.3\t80/tcp bbe79a746fe0\tsite.com_db\trunning\t172.25.0.2\t3306/tcp ","version":"Следующая","tagName":"h2"},{"title":"templates​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#templates","content":"Восстановление исходных файлов docker-compose в каталоге конфигурации. Команда не будет работать в системах Linux при установке через apt-manager. Пример использования: dl templates  ","version":"Следующая","tagName":"h2"},{"title":"version​","type":1,"pageTitle":"Доступные команды","url":"/ru/commands#version","content":"Отобразить текущую версию. Пример использования: dl version  ","version":"Следующая","tagName":"h2"},{"title":"Конфигурация","type":0,"sectionRef":"#","url":"/ru/getting-started/env","content":"","keywords":"","version":"Следующая"},{"title":"Настройка .env файла​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#настройка-env-файла","content":"С помощью переменных в .env файле вы можете гибко управлять настройками окружения. ","version":"Следующая","tagName":"h2"},{"title":"Основные​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#основные","content":"Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеNETWORK_NAME\tДа\tГенерируется из HOST_NAME\tИмя docker сети. Генерируется из HOST_NAME без спец символов DOCUMENT_ROOT\tДа\t/var/www/html\tКорневая директория сайта, в которой находится файл index.php. 1 HOST_NAME\tНет\tГенерируется по имени текущей директории\tИмя сайта или домен. Используется для построения локального URL. 2 ","version":"Следующая","tagName":"h3"},{"title":"Деплой файлов и базы данных​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#деплой-файлов-и-базы-данных","content":"Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеCATALOG_SRV\tНет 3 Корневая директория сайта на сервере USER_SRV\tНет 3 Имя пользователя SSH для подключения к серверу PORT_SRV\tНет 3 Порт SSH для подключения к серверу SERVER\tНет 3 IP адрес (или домен) для подключения к серверу SSH_KEY\tНет 3\tid_rsa\tУказывается имя ssh-ключа, расположенного в директории ~/.ssh/ ASK_KEY_PASSPHRASE\tНет\tfalse\tЗапросить пароль приватного ssh-ключа. Доступные значения: true, false USE_SSH_PASS\tНет\tfalse\tИгнорировать ssh-ключ и использовать пароль для подключения. Доступные значения: true, false EXCLUDED_TABLES\tНет Исключаемые таблицы MySQL при скачивании дампа с сервера EXCLUDED_FILES\tНет Исключаемые файлы при скачивании архива файлов с сервера ","version":"Следующая","tagName":"h3"},{"title":"Подключение к базе данных​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#подключение-к-базе-данных","content":"Если скрипт не смог автоматически определить доступы к базе данных на сервере, пропишите настройки в env-файл вручную Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеMYSQL_HOST_SRV\tНет\tlocalhost\tХост MYSQL_PORT_SRV\tНет\t3306\tПорт MYSQL_DATABASE_SRV\tДа Название базы MYSQL_LOGIN_SRV\tДа Имя пользователя MYSQL_PASSWORD_SRV\tДа Пароль пользователя ","version":"Следующая","tagName":"h3"},{"title":"Настройки PHP​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#настройки-php","content":"Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеPHP_VERSION\tДа Версия PHP Доступные значения: 7.3-apache, 7.4-apache, 8.0-apache, 8.1-apache, 8.2-apache, 7.3-fpm, 7.4-fpm, 8.0-fpm, 8.1-fpm, 8.2-fpm PHP_MEMORY_LIMIT\tНет\t256M\tЛимит памяти PHP PHP_POST_MAX_SIZE\tНет\t100M\tМаксимальный размер POST-запроса PHP_UPLOAD_MAX_FILESIZE\tНет\t100M\tМаксимальный размер файла, разрешенный для загрузки PHP_MAX_FILE_UPLOADS\tНет\t50\tМаксимальное количество загружаемых файлов PHP_MAX_EXECUTION_TIME\tНет\t60\tМаксимальное время выполнения скрипта PHP_MODULES\tНет Дополнительные php расширения. Например, PHP_MODULES=&quot;redis memcached&quot; XDEBUG\tНет\toff 4\tДля включения модуля XDebug, используйте параметр debug XDEBUG_IDE_KEY\tНет\tPHPSTORM\tКлюч, который должен быть передан при инициализации сессии XDebug XDEBUG_PORT\tНет\t9003\tПорт XDebug ","version":"Следующая","tagName":"h3"},{"title":"Настройки MySQL​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#настройки-mysql","content":"Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеMYSQL_VERSION\tНет Версия MySQL. Доступные значения: 5.7, 8.0 MYSQL_DATABASE\tНет\tdb\tИмя базы данных MySQL MYSQL_USER\tНет\tdb\tИмя пользователя базы данных MySQL MYSQL_PASSWORD\tНет\tdb\tПароль пользователя базы данных MySQL MYSQL_ROOT_PASSWORD\tНет\troot\tПароль root-пользователя базы данных MySQL ","version":"Следующая","tagName":"h3"},{"title":"Дополнительные контейнеры​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#дополнительные-контейнеры","content":"Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеREDIS\tНет\tfalse\tЕсли указано значение true, будет поднят контейнер с Redis REDIS_PASSWORD\tНет\tpass\tПароль Redis MEMCACHED\tНет\tfalse\tЕсли указано значение true, будет поднят контейнер с Memcached ","version":"Следующая","tagName":"h3"},{"title":"Другие настройки​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#другие-настройки","content":"Переменная\tОбязательная\tЗначение по умолчанию\tПримечаниеLOCALTIME\tНет\tEurope/Moscow\tЧасовой пояс, устанавливаемый в контейнеры PHP и MySQL NGINX_CONF\tНет\t~/.config/dl/config-files/default.conf.template\tШаблон конфига nginx. Требуется при использовании php-fpm версии (nginx + php-fpm) LOCAL_IP\tНет\tВнешний локальный IP Например, 192.168.0.5\tЕсли IP компьютера был неправильно определен, его нужно указать вручную в .env файле APPEND_COMPOSE_FILE\tНет Добавить docker-compose.yaml файл, который должен быть запущен с проектом. (Если файлов несколько, их нужно разделить двоеточием) ","version":"Следующая","tagName":"h3"},{"title":"Пример конфигурации для CMS Битрикс​","type":1,"pageTitle":"Конфигурация","url":"/ru/getting-started/env#пример-конфигурации-для-cms-битрикс","content":"## Remote Server (PROD) ## CATALOG_SRV=/var/www/site.com/public_html USER_SRV=user PORT_SRV=22 SERVER=127.0.0.1 ## Local container config ## HOST_NAME=site.com DOCUMENT_ROOT=/var/www/html ## Avalible versions: 7.3-apache 7.4-apache 8.0-apache 8.1-apache 8.2-apache 7.3-fpm 7.4-fpm 8.0-fpm 8.1-fpm 8.2-fpm ## PHP_VERSION=7.3-apache ## Avalible versions: 5.7 8.0 ## MYSQL_VERSION=5.7 ## Deploy settings ## EXCLUDED_TABLES=b_event_log,b_search_content_stem,b_search_content,b_search_content_text,b_search_content_title,b_search_phrase,b_search_suggest,b_perf_error EXCLUDED_FILES=.git,upload,bitrix/backup,bitrix/cache,bitrix/managed_cache,bitrix/stack_cache,bitrix/tmp,.env  Например, если задать site.com, локальный адрес будет таким: site.com.localhost (или site.com.127.0.0.1.nip.io)↩Например, для Laravel значение будет /var/www/html/public↩Обязательная переменная при использовании команды deploy↩Все параметры XDebug https://xdebug.org/docs/all_settings#mode↩ ","version":"Следующая","tagName":"h2"},{"title":"Первый запуск","type":0,"sectionRef":"#","url":"/ru/getting-started/first-run","content":"","keywords":"","version":"Следующая"},{"title":"Служебные контейнеры​","type":1,"pageTitle":"Первый запуск","url":"/ru/getting-started/first-run#служебные-контейнеры","content":"После установки первым делом нужно запустить служебные контейнеры. dl service up  Команда проверит корректность установки docker и запустит контейнеры portainer, mailcatcher и traefik. примечание DL по умолчанию использует порты 8080, 80 и 443. Они должны быть доступны в вашей системе. После запуска сервисы будут доступны по адресам: Portainer http://portainer.localhostTraefik http://traefik.localhostMailhog http://mail.localhost Команду нужно выполнить только единожды, контейнеры запускаются с опцией restart: always, то есть после перезагрузки компьютера, docker автоматически их запустит. Если вы хотите остановить и удалить служебные контейнеры, запустите команду: dl service down  ","version":"Следующая","tagName":"h2"},{"title":"Запуск локального сайта​","type":1,"pageTitle":"Первый запуск","url":"/ru/getting-started/first-run#запуск-локального-сайта","content":"Склонируйте git репозиторий на ваш компьютер (вы ведь используете git, верно?) и перейдите в корневую директорию проекта. Запустите команду dl env, чтобы скопировать пример .env файла. Если у вас на проекте уже используется .env, будет выдано предупреждение с вариантами: перезаписать файл или вывести на экран необходимые переменные, которые нужно скопировать и поместить в ваш текущий .env. Вы можете создать файл .env.example и добавить его под git, тогда при запуске команды dl env будет использоваться именно он. Отредактируйте .env файл, указав необходимые переменные. 1 Запустите команду dl deploy, если вам нужно скачать с production-сервера базу данных или файлы. 2 Важно! У вас должен быть настроен доступ к серверу через ssh ключ. Запустите проект командой dl up. Чтобы остановить и удалить контейнеры проекта, используйте команду dl down. 2 к сведению Все команды DL должны запускаться в корневой директории проекта, в которой находится .env файл. После запуска проекта отобразятся локальные ссылки. Вы можете использовать домен .localhost или обращаться к сайту через сервис nip.io — это удобно, если вы работаете в корпоративной локальной сети, тогда коллеги смогут переходить на ваш сайт со своего компьютера. Конфигурация через .env файл ↩Доступные команды ↩ ","version":"Следующая","tagName":"h2"},{"title":"Введение","type":0,"sectionRef":"#","url":"/ru/intro","content":"","keywords":"","version":"Следующая"},{"title":"Особенности​","type":1,"pageTitle":"Введение","url":"/ru/intro#особенности","content":"Поддержка версий PHP (apache и php-fpm) 7.3, 7.4, 8.0, 8.1, 8.2Поддержка MySQL версий 5.7, 8.0Скачивание базы данных и файлов с production-сервераRedisMemcachedNginxКроссплатформенностьПерехват почты, отправленной через phpСистема управления docker-контейнерами PortainerНе требует root доступ (при установке исполняемого файла в директорию пользователя)Доступ к сайтам из браузера через *.localhost или *.nip.ioВозможность добавлять кастомные docker-compose.yaml файлы в конфигурацию DL ","version":"Следующая","tagName":"h2"},{"title":"Как это работает?​","type":1,"pageTitle":"Введение","url":"/ru/intro#как-это-работает","content":"После установки утилиты, на вашем компьютере будут запущены 3 сервисных docker-контейнера: Traefik (прокси-сервер для взаимодействия с установленными проектами)Mailhog (легковесная служба для перехвата email, отправленных с локального сайта)и Portainer (веб-интерфейс для работы с Docker) Сайты, которые вы запускаете через DL, находятся в своей собственной виртуальной сети, вы можете одновременно запустить несколько проектов, у каждого сформируется свой URL. При запуске проекта весь исходный код (в директории, где запущен DL) монтируется в docker-контейнер, что позволяет редактировать код и сразу тестировать функционал в браузере. С помощью переменных в .env файле вы можете установить необходимые настройки, которые требуются для конкретного проекта, а также добавить или полностью переопределить запускаемые образы на свои. Для удобства запуска (и модификации) используется файл docker-compose.yaml. ","version":"Следующая","tagName":"h2"},{"title":"Лицензирование​","type":1,"pageTitle":"Введение","url":"/ru/intro#лицензирование","content":"Весь исходный код распространяется в соответствии с лицензией MIT. ","version":"Следующая","tagName":"h2"},{"title":"Содействие​","type":1,"pageTitle":"Введение","url":"/ru/intro#содействие","content":"Пожалуйста, убедитесь, что при отправке запроса на слияние выполнено следующее: Сделайте форк репозитория и создайте свою ветвь от master. Обязательно протестируйте свои изменения! Убедитесь, что ваш код соответствует общепринятым стандартам. ","version":"Следующая","tagName":"h2"},{"title":"Установка","type":0,"sectionRef":"#","url":"/ru/getting-started/install","content":"","keywords":"","version":"Следующая"},{"title":"Установка deb-пакета​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#установка-deb-пакета","content":"Только для debian-подобных операционных систем: debian, ubuntu, linux mint и т. д. к сведению При установке deb-пакета вам сразу будет доступно автоматическое завершение команд (auto-complete) для bash и zsh. Приложение будет обновляться вместе с пакетами системы через пакетный менеджер apt.  ","version":"Следующая","tagName":"h2"},{"title":"Удаление старой версии​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#удаление-старой-версии","content":"Вам нужно удалить предыдущую версию, если у вас прежде dl был установлен в домашнюю директорию пользователя через установочный bash скрипт. cd ~ &amp;&amp; rm -rf .local/bin/dl .config/dl  ","version":"Следующая","tagName":"h3"},{"title":"Настройка репозитория​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#настройка-репозитория","content":"Перед первой установкой DL на новый компьютер необходимо настроить репозиторий dl. После этого вы можете установить и обновить dl из репозитория. Обновите индекс пакетов apt и установите пакеты, чтобы разрешить apt использовать репозиторий через HTTPS: sudo apt update sudo apt install ca-certificates gnupg Добавьте официальный GPG ключ: sudo install -m 0755 -d /etc/apt/keyrings wget -qO - https://apt.fury.io/local-deploy/gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/dl.gpg &gt; /dev/null Используйте следующую команду для настройки репозитория: echo &quot;deb [arch=&quot;$(dpkg --print-architecture)&quot; signed-by=/etc/apt/keyrings/dl.gpg] https://apt.fury.io/local-deploy/ /&quot; | sudo tee /etc/apt/sources.list.d/dl.list &gt; /dev/null Обновите индекс пакетов apt и установите последнюю версию dl: sudo apt update sudo apt install dl  Запустите команду dl для проверки корректности установки. Если возникает ошибка, перезапустите терминал. ","version":"Следующая","tagName":"h3"},{"title":"Расположение файлов​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#расположение-файлов","content":"Исполняемый файл: /usr/bin/dlФайлы docker-compose: /etc/dl/config-files/Конфигурационный файл приложения: ~/.config/dl/ ","version":"Следующая","tagName":"h3"},{"title":"Установка в домашнюю директорию пользователя​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#установка-в-домашнюю-директорию-пользователя","content":"Для Linux и MacOS примечание Этот способ установки проще и не требует root-доступа, но ограничивает функциональность приложения.  Чтобы установить DL, просто вставьте код в терминал и запустите: curl -s https://raw.githubusercontent.com/local-deploy/dl/master/install_dl.sh | bash  Скрипт проверит зависимости, скачает и установит последний релиз. Исполняемый файл dl будет записан в домашнюю директорию пользователя по пути ~/.local/bin/dl. Если директории не существует, она будет создана. При первом запуске сгенерируются конфигурационные файлы docker-compose в директории ~/.config/dl/config-files/. к сведению При установке проверяется глобальная переменная $PATH, если в ней не будет указана директория ~/.local/bin/, скрипт добавит в файл .bashrc (или .zshrc) строку PATH=&quot;$PATH:$HOME/.local/bin&quot; Запустите команду dl для проверки корректности установки. Если возникает ошибка, перезапустите терминал. ","version":"Следующая","tagName":"h2"},{"title":"Расположение файлов​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#расположение-файлов-1","content":"Исполняемый файл: ~/.local/bin/dlКонфигурационный файл приложения: ~/.config/dl/Файлы docker-compose: ~/.config/dl/config-files/ ","version":"Следующая","tagName":"h3"},{"title":"Ручная установка​","type":1,"pageTitle":"Установка","url":"/ru/getting-started/install#ручная-установка","content":" Скачайте и распакуйте последний релиз (архив tar.gz) по ссылке https://github.com/local-deploy/dl/releases Например, для MacOS, arm архитектуры: curl -fsSL &quot;https://github.com/local-deploy/dl/releases/download/1.0.0/dl-1.0.0-darwin-arm64.tar.gz&quot; -o &quot;dl.tar.gz&quot; tar -xzf dl.tar.gz  Архив содержит бинарный файл dl. Скопируйте его в папку домашней директории, которая содержит исполняемые файлы, например, ~/.local/bin или ~/bin. # linux mv dl $HOME/.local/bin/dl chmod +x &quot;$HOME/.local/bin/dl&quot;  Запустите команду dl для проверки корректности установки. Если возникает ошибка, перезапустите терминал. ","version":"Следующая","tagName":"h2"},{"title":"Устранение неисправностей","type":0,"sectionRef":"#","url":"/ru/troubleshooting","content":"","keywords":"","version":"Следующая"},{"title":"Флаг debug​","type":1,"pageTitle":"Устранение неисправностей","url":"/ru/troubleshooting#флаг-debug","content":"При любых ошибках или неисправностях, запустите команду с указанием флага --debug. Флаг включает режим отладки, при котором в терминал выводится отладочная информация. ","version":"Следующая","tagName":"h2"},{"title":"Ошибка mysqldump​","type":1,"pageTitle":"Устранение неисправностей","url":"/ru/troubleshooting#ошибка-mysqldump","content":"При деплое базы данных может отобразиться ошибка: Table 'db.some_table' doesn't exist. Попробуйте запустить команду mysqldump в консоли вручную. Если на экране будет ошибка вида: mysqldump: Couldn't execute 'SELECT COLUMN_NAME, ..... FROM information_schema.COLUMN_STATISTICS .... : Unknown table 'COLUMN_STATISTICS' in information_schema (1109)  Значит вы неправильно установили версию MySQL в .env файле. Локальная версия и версия на сервере должны совпадать. Проблема решается дополнительным параметром --column-statistics=0, который автоматически устанавливается при дампе, если версия mysql 8.0 Полную команду, которую выполняет dl на сервере, можно увидеть в режиме отладки. ","version":"Следующая","tagName":"h2"},{"title":"Ошибка определения хеша в known_hosts​","type":1,"pageTitle":"Устранение неисправностей","url":"/ru/troubleshooting#ошибка-определения-хеша-в-known_hosts","content":"Иногда вы можете получить ошибку при запуске команды dl deploy: ssh: handshake failed: knownhosts: key mismatch  Ошибка уведомляет, что в файле ~/.ssh/known_hosts присутствует ключ сервера, но хэш от имени сервера не совпадает с тем, который указан у вас в переменной SERVER. Например, при доступе к серверу по ssh вы указали домен (ssh user@site.com), а в файле .env, в переменной SERVER указываете IP адрес. В таком случае клиент SSH видит в файле ~/.ssh/known_hosts тот же ключ, но совсем с другим хэшем домена. Попробуйте зайти на сервер через ssh вручную, с теми же доступами, которые вы указали в .env файле, система должна выдать ошибку и предложит удалить лишнюю строку. Кардинальное решение проблемы, если ничего не помогает: удалить файл ~/.ssh/known_hosts. ","version":"Следующая","tagName":"h2"},{"title":"Известные проблемы​","type":1,"pageTitle":"Устранение неисправностей","url":"/ru/troubleshooting#известные-проблемы","content":"","version":"Следующая","tagName":"h2"},{"title":"Safari​","type":1,"pageTitle":"Устранение неисправностей","url":"/ru/troubleshooting#safari","content":"В операционной системе MacOS браузер Safari не распознает домен .localhost Вы можете использовать домен .nip.io, чтобы открыть проект. В других браузерах подобной проблемы не наблюдается. ","version":"Следующая","tagName":"h3"},{"title":"Docker Desktop​","type":1,"pageTitle":"Устранение неисправностей","url":"/ru/troubleshooting#docker-desktop","content":"На некоторых дистрибутивах Linux может наблюдаться проблема с сервисными контейнерами, если Docker установлен версии Desktop. На текущий момент решения проблемы нет. Единственный выход — удалить Desktop и установить версию Engine. Install Docker Engine ","version":"Следующая","tagName":"h3"}],"options":{"languages":["en","ru"],"id":"default"}}